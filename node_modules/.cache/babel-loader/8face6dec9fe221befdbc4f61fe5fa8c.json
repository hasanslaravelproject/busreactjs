{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\projectbus\\\\ReactApp\\\\src\\\\components\\\\users\\\\UsersTable.js\",\n    _s = $RefreshSig$();\n\nimport MaterialTable from 'material-table';\nimport React, { useEffect, useState } from 'react';\nimport tableIcons from '../templates/TableIcons';\nimport getColumns from './UsersColumns';\nimport Edit from \"@material-ui/icons/Edit\";\nimport { Switch } from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport { AddBox } from \"@material-ui/icons\";\nimport { deleteUsers, getUsers } from \"../../repo/usersRepo\";\nimport { Loading } from \"../templates/Loading\";\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Demo from '../templates/demo';\n/*\r\nDocumentation on developing the Material-Table can be found at https://material-table.com/\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersTable = props => {\n  _s();\n\n  const history = props.history;\n  const [columns, setColumns] = useState(getColumns({}));\n  const [loading, setLoading] = useState(false);\n  const [users, setUsers] = useState([]); //Here we call delete\n\n  const handleRowDelete = (oldData, resolve) => {\n    setLoading(true);\n    deleteUsers(oldData.id).then(res => {\n      resolve();\n      setLoading(false);\n    }).catch(error => {\n      resolve();\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const {\n        data\n      } = await getUsers(0, 10, \"\");\n      console.log(data);\n      setUsers(data);\n    };\n\n    fetchApi();\n  }, []);\n  const [id, data] = users;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-wrap h-100 justify-content-center align-items-center w-100\",\n    children: /*#__PURE__*/_jsxDEV(Demo, {\n      data: da\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersTable, \"iAVlUxdJGC9J+vVDW20QEpiEdrQ=\");\n\n_c = UsersTable;\nexport default _c2 = withRouter(UsersTable);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UsersTable\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/xampp/htdocs/projectbus/ReactApp/src/components/users/UsersTable.js"],"names":["MaterialTable","React","useEffect","useState","tableIcons","getColumns","Edit","Switch","withRouter","AddBox","deleteUsers","getUsers","Loading","Demo","UsersTable","props","history","columns","setColumns","loading","setLoading","users","setUsers","handleRowDelete","oldData","resolve","id","then","res","catch","error","fetchApi","data","console","log","da"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,gBAA1B;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,sBAApC;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAO,4DAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA;AACA;AACA;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAACE,UAAU,CAAC,EAAD,CAAX,CAAtC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACkB,KAAD,EAAOC,QAAP,IAAiBnB,QAAQ,CAAC,EAAD,CAA/B,CAJ0B,CAK1B;;AACA,QAAMoB,eAAe,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB;AAC9CL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACIV,IAAAA,WAAW,CAACc,OAAO,CAACE,EAAT,CAAX,CACKC,IADL,CACUC,GAAG,IAAI;AACTH,MAAAA,OAAO;AACPL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJL,EAKKS,KALL,CAKWC,KAAK,IAAI;AACZL,MAAAA,OAAO;AACPL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KARL;AASH,GAXD;;AAaAlB,EAAAA,SAAS,CAAC,MAAI;AACV,UAAM6B,QAAQ,GAAC,YAAS;AACpB,YAAM;AAAEC,QAAAA;AAAF,UAAS,MAAMrB,QAAQ,CAAC,CAAD,EAAG,EAAH,EAAM,EAAN,CAA7B;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAV,MAAAA,QAAQ,CAACU,IAAD,CAAR;AACH,KAJD;;AAKAD,IAAAA,QAAQ;AAEX,GARQ,EAQP,EARO,CAAT;AASA,QAAM,CAACL,EAAD,EAAIM,IAAJ,IAAUX,KAAhB;AAKA,sBAEA;AAAK,IAAA,SAAS,EAAC,wEAAf;AAAA,2BACF,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEc;AAAZ;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,UAFA;AAKH,CAtCD;;GAAMrB,U;;KAAAA,U;AAuCN,qBAAeN,UAAU,CAACM,UAAD,CAAzB","sourcesContent":["import MaterialTable from 'material-table';\r\nimport React, {useEffect, useState} from 'react';\r\nimport tableIcons from '../templates/TableIcons';\r\nimport getColumns from './UsersColumns';\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport { Switch } from \"@material-ui/core\";\r\nimport {withRouter} from \"react-router\";\r\nimport {AddBox} from \"@material-ui/icons\";\r\nimport {deleteUsers, getUsers} from \"../../repo/usersRepo\";\r\nimport { Loading } from \"../templates/Loading\";\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport Demo from '../templates/demo'\r\n/*\r\nDocumentation on developing the Material-Table can be found at https://material-table.com/\r\n*/\r\n\r\nconst UsersTable = (props) => {\r\n    const history = props.history;\r\n    const [columns, setColumns] = useState(getColumns({}));\r\n    const [loading, setLoading] = useState(false);\r\n    const [users,setUsers]=useState([])\r\n    //Here we call delete\r\n    const handleRowDelete = (oldData, resolve) => {\r\n    setLoading(true);\r\n        deleteUsers(oldData.id)\r\n            .then(res => {\r\n                resolve();\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                resolve();\r\n                setLoading(false);\r\n            })\r\n    }\r\n  \r\n    useEffect(()=>{\r\n        const fetchApi=async()=>{\r\n            const { data }=await getUsers(0,10,\"\");\r\n            console.log(data)\r\n            setUsers(data)\r\n        }\r\n        fetchApi()\r\n        \r\n    },[])\r\n    const [id,data]=users;\r\n\r\n\r\n  \r\n   \r\n    return (\r\n\r\n    <div className=\"d-flex flex-wrap h-100 justify-content-center align-items-center w-100\">\r\n  <Demo data={da}/>\r\n    </div>);\r\n}\r\nexport default withRouter(UsersTable);\r\n"]},"metadata":{},"sourceType":"module"}